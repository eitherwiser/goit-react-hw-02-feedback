{"version":3,"sources":["components/statistics/Statistics.module.css","components/feedback/FeedbackOptions.module.css","components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedback/FeedbackOptions.jsx","components/notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Statistics","good","neutral","bad","total","positivePercentage","textColor","list","style","color","FeedbackOptions","options","onLeaveFeedback","feedbackList","map","item","btn","type","value","onClick","toUpperCase","slice","Notification","message","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","feedbackIncrement","e","setState","prevState","target","this","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11afb6c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3eYkw\",\"good\":\"Statistics_good__3yJzn\",\"neutral\":\"Statistics_neutral__3VbFc\",\"bad\":\"Statistics_bad__1fknR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__1FQAy\",\"btn\":\"FeedbackOptions_btn__3by5_\"};","import s from './Section.module.css';\nimport PropTypes from \"prop-types\";\n\nexport default function Section ({title, children }) {\n  return (\n      <div className={s.container}>\n        <h2 className={s.title}>{title}</h2>\n        {children}\n      </div>\n  )  \n}\n\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nexport default function Statistics(\n  {\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n  }) {\n  \n    const textColor = `rgba(\n    ${200 - positivePercentage},\n    ${positivePercentage + 50},\n    50,\n    ${((({ neutral }.neutral / { total }.total) * 100) > 60) ?\n      0.4 :\n      ((({ neutral }.neutral / { total }.total) * 100) > 20) ?\n        (1 - (({ neutral }.neutral / { total }.total) * 100) * 0.01) :\n        1})`;\n  \n  return (\n\n    <>\n\n    <ul className={s.list}>\n        <li className={s.good}>\n          <span>\n              {good} {\" \"}\n          </span>\n          <span className=\"material-icons\">\n          sentiment_satisfied \n          </span>\n      </li>\n\n        <li className={s.neutral}>\n          <span>\n              {neutral} {\" \"}\n          </span>\n          <span className=\"material-icons\">\n            sentiment_neutral \n          </span>\n\n      </li>\n\n        <li className={s.bad}>\n          <span>\n            {bad} {\" \"}\n          </span>\n          <span className=\"material-icons\">\n            sentiment_dissatisfied \n          </span>\n      </li>\n      \n      </ul>\n\n      {({ positivePercentage } === 0) ?\n        (<p><span> There are no feedbacks here yet.</span></p>) :\n        ({ good }.good === { total }.total) ?\n          (<p style={{ color: textColor }}><span>{positivePercentage}%</span> positive!</p>) :\n            ({ good }.good === 0) ?\n          (<p style={{color: textColor }} > There are no positive feedbacks here.</p>):\n          (<p style={{color: textColor }} ><span>{positivePercentage}%</span> feedbacks are positive of total <span>{total}</span>.</p>)\n      }\n      </>\n  );\n\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from \"./FeedbackOptions.module.css\"\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n      <ul className={s.feedbackList}>\n        {options.map(item => (\n          <li key={item}>\n            <button className={s.btn}\n              type=\"button\"\n              value={item}\n              onClick={onLeaveFeedback}\n              >\n              {item[0].toUpperCase() + item.slice(1)}\n            </button>\n            </li>\n        ))}\n      </ul>\n  );\n\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return <span>{message}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};","import './App.css';\nimport React from 'react';\nimport Section from \"./components/section/Section\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport FeedbackOptions from \"./components/feedback/FeedbackOptions\";\nimport Notification from \"./components/notification/Notification\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  feedbackIncrement = (e) => {\n    this.setState((prevState) => {\n      return { [e.target.value]: prevState[e.target.value] + 1 }\n    });\n  };\n\n\n\n  render() {\n\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\" className=\"feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <>\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n\n\n            </>\n          ) : (\n            <Notification message=\"Is no any feedbacks here yet\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}